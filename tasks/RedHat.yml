---
- name: install required system packages
  yum: name={{ item }} state=present
  with_items:
    - sudo
    - glibc-static
    - gcc

- name: create /package
  file: state=directory dest=/package

- name: download runit-2.1.2.tar.gz
  get_url: url=http://smarden.org/runit/runit-2.1.2.tar.gz dest=/package/runit-2.1.2.tar.gz

- name: unarchive runit-2.1.2.tar.gz
  unarchive: remote_src=True src=/package/runit-2.1.2.tar.gz dest=/package

- name: compile runit
  shell: cd /package/admin/runit-2.1.2/ && package/install creates=/package/admin/runit-2.1.2/command/runit

- name: install stage 2
  command: install -m0750 /package/admin/runit/etc/2 /sbin/runsvdir-start creates=/sbin/runsvdir-start

- name: create /service
  file: state=directory dest=/service

- name: add a line to /etc/inittab
  lineinfile: path=/etc/inittab regexp="^SV:123456:respawn:/sbin/runsvdir-start" line="SV:123456:respawn:/sbin/runsvdir-start"
  notify: init q

- name: create users
  user: name={{ runit_service_user }} comment="runit service user"
  when: runit_service_user != 'root'

- name: create runit services dirs
  file: path=/etc/sv/{{ runit_service_name }}/log state=directory

- name: put runit services files
  template: src={{ item }} dest=/etc/sv/{{ runit_service_name }}/{{ item }} owner=root group=root mode=0755
  with_items:
    - run
  notify: runit restart {{ runit_service_name }}

- include_tasks: prometheus.yml
  when: runit_prometheus_stats

- name: put runit services log files
  template: src={{ item }} dest=/etc/sv/{{ runit_service_name }}/{{ item }} owner=root group=root mode=0755
  with_items:
    - log/run
  notify: runit restart {{ runit_service_name }}/log

- name: enable runit services
  file: src=/etc/sv/{{ runit_service_name }} dest=/service/{{ runit_service_name }} state=link

- name: wait for runit to handle service
  wait_for: path=/etc/sv/{{ runit_service_name }}/supervise/status
  when: runit_allow_user_control

- name: put runit services log config files
  template: src=log/{{ item }} dest=/var/log/{{ runit_service_name }}/{{ item }} owner=root group=root mode=0755
  with_items:
    - config
  notify: runit hup {{ runit_service_name }}/log

- name: create control directory
  file: dest=/etc/sv/{{ runit_service_name }}/control state=directory

- name: put runit control/t file
  template: src={{ item }} dest=/etc/sv/{{ runit_service_name }}/{{ item }} owner=root group=root mode=0755
  with_items:
    - control/t

- name: allow {{ runit_service_user }} to controll the {{ runit_service_name }} service
  file: dest=/etc/sv/{{ runit_service_name }}/{{ item.d }} mode={{ item.m }} owner={{ item.o }}
  with_items:
      - { d: supervise,         m: 755, o: root }
      - { d: supervise/ok,      m: 600, o: "{{ runit_service_user }}"}
      - { d: supervise/control, m: 600, o: "{{ runit_service_user }}"}
      - { d: supervise/status,  m: 644, o: "{{ runit_service_user }}"}
  when:
    - runit_allow_user_control
